name: DevSecOps CI CD Pipeline for Juice Shop
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
permissions:
  contents: read
  security-events: write
  actions: read
jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: juice-shop:latest
          
      - name: Deploy Juice Shop
        run: docker run -d --name juice-shop -p 3000:3000 juice-shop:latest

      - name: Wait for Juice Shop to Start
        run: |
          echo "Waiting for Juice Shop to start..."
          for i in {1..30}; do
            if curl -s http://localhost:3000 > /dev/null; then
              echo "Juice Shop is ready!"
              exit 0
            fi
            sleep 5
          done
          echo "Juice Shop failed to start."
          exit 1
      # Step 6: Run Dynamic Application Security Testing (DAST)
      - name: Run DAST with OWASP ZAP
        run: |
          docker run -t owasp/zap2docker-stable zap-baseline.py \
            -t http://localhost:3000 -r zap_report.html

      # Step 7: Upload DAST Report
      - name: Upload OWASP ZAP Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_report.html
      
      - name: Stop and Remove Juice Shop Container
        if: always()
        run: docker stop juice-shop && docker rm juice-shop


      
      # - name: SAST using CodeQL
      #   uses: github/codeql-action/init@v3
      #   with:
      #     languages: javascript 
      #     queries: security-extended
      #     config: |
      #       paths-ignore:
      #         - 'data/static/codefixes'

      # - name: Perform CodeQL Analysis
      #   uses: github/codeql-action/analyze@v3
    
          

      # - name: Upload CodeQL Results
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: codeql-scan-results
      #     path: .
      # # Software Composition Analysis using Owasp Dependency Check
      # - name: Run OWASP Dependency Check
      #   uses: dependency-check/Dependency-Check_Action@main
      #   with:
      #     format: "JSON"
      #     project: JuiceShop
      #     path: "."
      #     out: "."
      #     args: "--exclude ../../ftp/legal.md --exclude ../../frontend/dist/frontend/assets/public/videos/owasp_promo.vtt"

      # - name: Upload Dependency Check Report
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: owasp-dependency-check-report
      #     path: .

      
